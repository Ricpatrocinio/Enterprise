# -*- coding: utf-8 -*-
"""AIDI-2004-01-lab2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TamX9Lx1DXNUc0xvwv6L1s80jxsvwaGZ
"""

# AIDI-2004-01
# Ricardo Patrocinio
# 100903676

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

from google.colab import drive
drive.mount('/content/drive')

# dataset with column names
column_names = ["ID", "Diagnosis", "Mean Radius", "Mean Texture", "Mean Perimeter", "Mean Area",
                "Mean Smoothness", "Mean Compactness", "Mean Concavity", "Mean Concave Points",
                "Mean Symmetry", "Mean Fractal Dimension", "SE Radius", "SE Texture", "SE Perimeter",
                "SE Area", "SE Smoothness", "SE Compactness", "SE Concavity", "SE Concave Points",
                "SE Symmetry", "SE Fractal Dimension", "Worst Radius", "Worst Texture", "Worst Perimeter",
                "Worst Area", "Worst Smoothness", "Worst Compactness", "Worst Concavity", "Worst Concave Points",
                "Worst Symmetry", "Worst Fractal Dimension"]

file_path = '/content/drive/My Drive/wdbc.data'
data = pd.read_csv(file_path, header=None, names=column_names)
data.head()

# Prepare the data
X = data.drop(["ID", "Diagnosis"], axis=1)
y = data["Diagnosis"]

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build the Random Forest classifier
clf = RandomForestClassifier(n_estimators=100, random_state=42)

# Train the classifier
clf.fit(X_train, y_train)

# Make predictions
y_pred = clf.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
print("\nClassification Report:")
print(classification_report(y_test, y_pred))